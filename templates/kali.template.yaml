AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates the a VPC for an isolated testing
  environment. It will deploy a Kali (attacker) instance running in a dedicated vpc.   Access to the Victim application
  is only available via its public addresses.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tagging Information
        Parameters:
          - Accounting
          - Department
          - Owner
          - Business
      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - PublicSubnetCIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
    ParameterLabels:
      KeyPairName:
        default: Key Pair Name
      PublicSubnetCIDR:
        default: Public Subnet CIDR
      VPCCIDR:
        default: VPC CIDR
Parameters:
  NATGatewayEIP:
    Type: String
  S3Bucket:
    Type: String
  PermissionsBoundary:
    Type: String
    Default: 'BoundaryForAdministratorAccess'
  Owner:
    Type: String
    Description: Owner/Creator of resource
    MaxLength: 20
    Default: CrowdStrike
  Business:
      Type: String
      Description: Department
      MaxLength: 20
      Default: DevDays
  Accounting:
    Type: String
    Description: Billing Account
    MaxLength: 20
    Default: DevDays
  Department:
    Type: String
    Description: Department
    MaxLength: 20
    Default: DevDays
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: AWS::EC2::KeyPair::KeyName
  PublicSubnetCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.16.128.0/28
    Description: CIDR Block for the public DMZ subnet for secure administrative entry
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.16.128.0/24
    Description: CIDR Block for the VPC
    Type: String
  RemoteAccessCIDR:
    Default: 1.1.1.1/32
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Trusted Source IP
    Type: String
  LatestKaliAMI:
    Type: AWS::EC2::Image::Id
    Default: ami-00f2e79091d9064be
Conditions:
  PermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, '' ] ]
Resources:
  Kali:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - Ref: 'KaliSecurityGroup'
          SubnetId:
            Ref: KaliPublicSubnet
      KeyName: !Ref 'KeyPairName'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          export aws_region=${AWS::Region}
          export KALI_PUB_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
          exec 3>&1 4>&2
          trap 'exec 2>&4 1>&3' 0 1 2 3
          exec 1>/tmp/log.out 2>&1
          while true
          do
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://gist.githubusercontent.com/ffalor/6a68235ed91b1a9b73bc9124e36bab42/raw/70037d6bdbc3544c91bf27e706e05d0f2584e320/setup-kali.sh")
          if [ "$STATUS" -eq "200" ]; then
            curl --insecure "https://gist.githubusercontent.com/ffalor/6a68235ed91b1a9b73bc9124e36bab42/raw/70037d6bdbc3544c91bf27e706e05d0f2584e320/setup-kali.sh" -H "User-Agent: Initialize Script" --output /tmp/setup-kali.sh;
            chmod +x /tmp/setup-kali.sh
            /tmp/setup-kali.sh
            curl --insecure "https://gist.githubusercontent.com/ffalor/12963a064df8f9b5918a791c1dc04828/raw/1e5a825d7958aa9a1f37984632a826af497f2f7f/start-kali.sh" -H "User-Agent: Initialize Script" --output /home/kali/start-kali.sh;
            chmod +x /home/kali/start-kali.sh
            /tmp/setup-kali.sh
            break
          else
            echo "Got $STATUS :( Not done yet..."
          fi
          sleep 10
          done
      InstanceType: m4.large
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      IamInstanceProfile: !Ref KaliBootstrapInstanceProfile
      ImageId: !Ref 'LatestKaliAMI'
      Tags:
        - Key: Name
          Value: 'Kali'
        - Key: CRWD_MANAGED
          Value: 'YES'
        - Key: tag-accounting
          Value: !Ref Accounting
        - Key: tag-business
          Value: !Ref Business
        - Key: tag-department
          Value: !Ref Department
        - Key: tag-owner
          Value: !Ref Owner
  KaliBootstrapInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'KaliIAMRole'
  KaliVPC:
    Type: AWS::EC2::VPC
    Metadata:
      cfn-lint:
        config:
          ignore_checks: [ W60 ]
    Properties:
      CidrBlock: !Ref 'VPCCIDR'
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: CreatedBy
          Value: GuardDuty Test Script
  KaliInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Network
          Value: Public
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: KaliVPC
      InternetGatewayId: !Ref 'KaliInternetGateway'
  KaliPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: KaliVPC
      CidrBlock: !Ref 'PublicSubnetCIDR'
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: Public subnet
        - Key: Network
          Value: Public
        - Key: CreatedBy
          Value: GuardDuty Test Script
      MapPublicIpOnLaunch: true
  KaliPublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KaliVPC
      Tags:
        - Key: Name
          Value: Public Subnets
        - Key: Network
          Value: Public
  KaliPublicSubnetRoute:
    DependsOn:
      - VPCGatewayAttachment
      - KaliVPC
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KaliPublicSubnetRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: KaliInternetGateway
  KaliPublicSubnetRouteTableAssociation:
    DependsOn: KaliVPC
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: KaliPublicSubnet
      RouteTableId:
        Ref: KaliPublicSubnetRouteTable

  KaliSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Port 80 and 443 open to VPC NATGW for exploit
      VpcId:
        Ref: KaliVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'RemoteAccessCIDR'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub "${NATGatewayEIP}/32"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub "${NATGatewayEIP}/32"
  KaliIAMRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - PermissionsBoundary
          - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${PermissionsBoundary}'
          - Ref: AWS::NoValue
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: KaliRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sts:*
                Resource: "*"
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - logs:Describe*
                  - logs:StartQuery
                  - securityhub:BatchUpdateFindings
                  - securityhub:BatchImportFindings
                  - securityhub:ListEnabledProductsForImport
                  - logs:FilterLogEvents
                  - logs:List*
                  - ec2messages:AcknowledgeMessage
                  - logs:StopQuery
                  - logs:Get*
                  - ec2messages:SendReply
                  - ec2messages:DeleteMessage
                  - ec2messages:FailMessage
                  - logs:TestMetricFilter
                Resource: "*"

