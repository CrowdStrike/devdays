---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Entry point for CWP lab.  Creates an EKS cluster in a VPC with a loadbalancer-controller and a CodeBuild pipelines to buid
              a container image and push to ecr whilst integrating with CrowdStrikes image scanning engine.'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Crowdstrike Role Parameters.
        Parameters:
          - RoleName
          - ExternalID
      - Label:
          default: Crowdstrike Falcon API keys.
        Parameters:
           - FalconClientId
           - FalconSecret
           - CrowdStrikeCloud
      - Label:
          default: Logging Account.
        Parameters:
          - LogArchiveBucketName
    ParameterLabels:
      CrowdStrikeCloud:
        default: The CrowdStrike Cloud your CID is hosted in
      LogArchiveAccount:
        default: Log archive account number
      LogArchiveBucketName:
        default: Cloudtrail log bucket created by Control Tower
      RoleName:
        default: Default IAM Role (Can be modified)
      ExternalID:
        default: External ID Enter 6 or more characters alphanumeric without white space
Parameters:
  PermissionsBoundary:
    Type: String
    Default: 'BoundaryForAdministratorAccess'
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1, located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2, located in Availability Zone 2.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 3, located in Availability Zone 3.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1, located in Availability
      Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2, located in Availability
      Zone 2.
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16–28
    Default: 10.0.160.0/20
    Description: CIDR block for the public (DMZ) subnet 3, located in Availability
      Zone 3.
    Type: String
  EksClusterName:
    Type: String
    Default: CRWD-EKS-Cluster

  Prefix:
    Type: String
    Default: justin-test

  S3Bucket:
    Type: String

  KeyPairName:
    Type: String
    Default: cs-key

  RemoteAccessCIDR:
    Type: String
    Default: 1.1.1.1/32

  BastionOS:
    Type: String
    AllowedValues: [ "Amazon-Linux2-HVM", "Amazon-Linux-HVM", "CentOS-7-HVM", "Ubuntu-Server-14.04-LTS-HVM", "Ubuntu-Server-16.04-LTS-HVM", "SUSE-SLES-15-HVM" ]
    Default: "Amazon-Linux2-HVM"
    Description: Linux distribution of the bastion host.
  BastionInstanceType:
    Default: "t3.micro"
    Type: String
    Description: Instance type for the bastion host.
  BastionRootVolumeSize:
    Type: Number
    Default: 10
    Description: Size in GB for the root EBS volume.
  BastionEnableTCPForwarding:
    Type: String
    Default: "false"
    AllowedValues: [ "true", "false" ]
    Description: Choose "true" to enable TCP forwarding.
  BastionEnableX11Forwarding:
    Type: String
    Default: "false"
    AllowedValues: [ "true", "false" ]
    Description: Choose "true" to enable X11 forwarding.
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: aws-quickstart
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    Default: quickstart-amazon-eks/
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. Used for Bastion Host setup
    Type: String
  FalconClientID:
    Description: 'Client ID for the Falcon API'
    Type: String
  FalconClientSecret:
    Description: 'Client Secret for the Falcon API'
    Type: String

Conditions:
  PermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, '']]

Resources:
  SetupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/iam.template.yaml'
      Parameters:
        S3Bucket: !Ref S3Bucket
        PermissionsBoundary: !Ref PermissionsBoundary

  VPCStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: SetupStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/vpc.template.yaml'
      Parameters:
        PrivateSubnet1CIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2CIDR: !Ref 'PrivateSubnet2CIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        VPCCIDR: !Ref 'VPCCIDR'
  
  EKSControlPlaneStack:
      Type: AWS::CloudFormation::Stack
      DependsOn: SetupStack
      Properties:
        TemplateURL:  !Sub 'https://${S3Bucket}.s3.amazonaws.com/eks-cluster.template.yaml'
        Parameters:
          PermissionsBoundary: !Ref PermissionsBoundary
          BastionRole: !GetAtt SetupStack.Outputs.BastionRole
          EksClusterName: !Ref EksClusterName
          VpcId: !GetAtt VPCStack.Outputs.VpcId
          SubnetPrivate1: !GetAtt VPCStack.Outputs.SubnetPrivate1
          SubnetPrivate2: !GetAtt VPCStack.Outputs.SubnetPrivate2
          SubnetPublic1: !GetAtt VPCStack.Outputs.SubnetPublic1
          SubnetPublic2: !GetAtt VPCStack.Outputs.SubnetPublic2
          EKSCodeBuildServiceRoleArn: !GetAtt SetupStack.Outputs.EKSCodeBuildServiceRoleArn
  
  PodIamRoleStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EKSControlPlaneStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/pod-iam-roles.template.yaml'
      Parameters:
        PermissionsBoundary: !Ref PermissionsBoundary
        OIDCIssuerURLWithoutProtocol: !GetAtt EKSControlPlaneStack.Outputs.OIDCIssuerURLWithoutProtocol


  CodePipelineStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SetupStack
      - EKSControlPlaneStack
      - PodIamRoleStack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/pipeline.template.yaml'
      Parameters:
        EKSCodeBuildServiceRoleArn: !GetAtt SetupStack.Outputs.EKSCodeBuildServiceRoleArn
        EKSClusterName: !Ref EksClusterName
        S3CodeBucketName: !Ref S3Bucket
        S3CodeBucketKey: code.zip
        FalconClientID: !Ref FalconClientID
        FalconClientSecret: !Ref FalconClientSecret
        PodS3AccessRoleArn: !GetAtt PodIamRoleStack.Outputs.PodS3AccessRoleArn

  EKSNodeGroup:
      Type: AWS::CloudFormation::Stack
      DependsOn: EKSControlPlaneStack
      Properties:
        TemplateURL:  !Sub 'https://${S3Bucket}.s3.amazonaws.com/eks-nodegroup.template.yaml'
        Parameters:
          PermissionsBoundary: !Ref PermissionsBoundary
          EksClusterName: !Ref EksClusterName
          SubnetPrivate1: !GetAtt VPCStack.Outputs.SubnetPrivate1
          SubnetPrivate2: !GetAtt VPCStack.Outputs.SubnetPrivate2
          ClusterSecurityGroupId: !GetAtt EKSControlPlaneStack.Outputs.ClusterSecurityGroupId

  BastionToAPIServerAccess:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      Description: Allow Bastion server to communicate with the cluster API Server
      GroupId: !GetAtt EKSControlPlaneStack.Outputs.ControlPlaneSecurityGroupId
      SourceSecurityGroupId: !GetAtt BastionStack.Outputs.BastionSecurityGroupID
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  LoadBalancer:
      Type: AWS::CloudFormation::Stack
      DependsOn: EKSNodeGroup
      Properties:
        TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/load-balancer-controller.yaml'
        Parameters:
          PermissionsBoundary: !Ref PermissionsBoundary
          OIDCIssuerURLWithoutProtocol: !GetAtt EKSControlPlaneStack.Outputs.OIDCIssuerURLWithoutProtocol
          EksClusterName: !Ref EksClusterName
          VpcId: !GetAtt VPCStack.Outputs.VpcId

  BastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template'
      Parameters:
        BastionHostName: EKSBastion
        BastionBanner: !Sub 's3://${S3Bucket}/${QSS3KeyPrefix}scripts/bastion_banner_message.txt'
        EnableBanner: false
        BastionTenancy: default
        VPCID: !GetAtt VPCStack.Outputs.VpcId
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.SubnetPublic1
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.SubnetPublic2
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-linux-bastion/'
        QSS3BucketRegion: !Ref QSS3BucketRegion
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        BastionInstanceType: !Ref BastionInstanceType
        RootVolumeSize: !Ref BastionRootVolumeSize
        AlternativeInitializationScript: !Sub 'https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh'
        AlternativeIAMRole: !GetAtt SetupStack.Outputs.BastionRole
        BastionAMIOS: !Ref BastionOS
        EnableTCPForwarding: !Ref BastionEnableTCPForwarding
        EnableX11Forwarding: !Ref BastionEnableX11Forwarding
        EnvironmentVariables: !Sub "K8S_CLUSTER_NAME=${EKSControlPlaneStack.Outputs.EKSName}, K8S_CA_DATA=${EKSControlPlaneStack.Outputs.CAData}, K8S_ENDPOINT=${EKSControlPlaneStack.Outputs.EKSEndpoint}"

  KaliStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3Bucket}.s3.amazonaws.com/kali.template.yaml'
      Parameters:
        KeyPairName: !Ref KeyPairName
        S3Bucket: !Ref S3Bucket
        NATGatewayEIP: !GetAtt VPCStack.Outputs.NATGatewayEIP
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
